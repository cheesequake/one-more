name: CI/CD Pipeline

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                ref: main

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_TOKEN }}

            - name: Build and push frontend Docker image
              uses: docker/build-push-action@v4
              with:
                context: ./frontend
                file: ./frontend/Dockerfile
                build-args: |
                    VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}
                push: true
                tags: ${{ secrets.DOCKER_USERNAME }}/one-more-frontend:latest

            - name: Build and push backend Docker image
              uses: docker/build-push-action@v4
              with:
                  context: ./backend
                  file: ./backend/Dockerfile
                  build-args: |
                    DB_HOST=${{ secrets.DB_HOST }}
                    DB_USER=${{ secrets.DB_USER }}
                    DB_PASSWORD=${{ secrets.DB_PASSWORD }}
                    DB_NAME=${{ secrets.DB_NAME }}
                    DB_PORT=${{ secrets.DB_PORT }}
                    AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
                    AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
                    REGION=${{ secrets.REGION }}
                    SQL_MODEL=${{ secrets.SQL_MODEL }}
                    FINAL_MODEL=${{ secrets.FINAL_MODEL }}

                  push: true
                  tags: ${{ secrets.DOCKER_USERNAME }}/one-more-backend:latest

    deploy:
        runs-on: ubuntu-latest
        needs: build

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Install SSH client
              run: sudo apt-get install -y openssh-client

            - name: Deploy to EC2
              env:
                DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
                DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}
              run: |
                # Add the EC2 SSH key
                echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
                chmod 600 ec2_key.pem

                # Log in to Docker Hub
                ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
                docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

                # Clean up Docker resources if disk space is low
                if [ \$(df / | awk 'NR==2 {print \$5}' | sed 's/%//') -gt 80 ]; then
                    echo "Running Docker system prune due to low disk space."
                    docker system prune -af
                fi

                # Pull the latest images
                docker pull $DOCKER_USERNAME/one-more-backend:latest
                docker pull $DOCKER_USERNAME/one-more-frontend:latest

                # Stop and remove existing containers
                docker stop one-more-backend || true
                docker rm one-more-backend || true
                docker stop one-more-frontend || true
                docker rm one-more-frontend || true

                # Run new backend container
                docker run --pull always -d -p 8000:8000 --name one-more-backend \
                $DOCKER_USERNAME/one-more-backend:latest

                # Run new frontend container
                docker run --pull always -d -p 3000:3000 --name one-more-frontend \
                $DOCKER_USERNAME/one-more-frontend:latest
                EOF